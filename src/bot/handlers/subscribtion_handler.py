from aiogram import Router, F
from aiogram.types import CallbackQuery
from aiogram.exceptions import TelegramBadRequest
from aiogram.fsm.context import FSMContext

from src.bot.states.user_flow import UserFlow
from src.bot.keyboards.get_yes_no_keyboard import get_yes_no_keyboard



from src.services.google_sheets_class import GoogleSheetClass

router = Router()

@router.callback_query(F.data.startswith("subscribe_"))
async def handle_subscription(
    callback: CallbackQuery,
    state: FSMContext,
    spreadsheet: GoogleSheetClass,
    BUYERS_SHEET_NAME: str,
    CHANNEL_USERNAME: str,
    nm_id: str
):
    telegram_id = callback.from_user.id
    value = "–î–∞" if callback.data == "subscribe_yes" else "–ù–µ—Ç"

    await spreadsheet.update_buyer_button_status(
        sheet_name=BUYERS_SHEET_NAME,
        telegram_id=telegram_id,
        button_name="subscribe",
        value=value
    )

    if callback.data == "subscribe_yes":
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É
        try:
            member = await callback.message.bot.get_chat_member(
                chat_id=CHANNEL_USERNAME,
                user_id=callback.from_user.id
            )
            if member.status in ("member", "administrator", "creator"):
                # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–ø–∏—Å–∞–Ω ‚Üí –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º
                await callback.message.edit_text(
                    "‚úÖ –û—Ç–ª–∏—á–Ω–æ! –í—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª.",
                )

                # –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ —Ç–∞–±–ª–∏—Ü–µ
                await spreadsheet.update_buyer_button_status(
                    sheet_name=BUYERS_SHEET_NAME, 
                    telegram_id=telegram_id, 
                    button_name="subscribe", 
                    value="–î–∞"
                )
                # üëâ –ù–∞—á–∏–Ω–∞–µ–º –ø–æ—à–∞–≥–æ–≤—ã–π –¥–∏–∞–ª–æ–≥
                await callback.message.edit_text(
                    f"üì¶ –í—ã –∑–∞–∫–∞–∑–∞–ª–∏ —Ç–æ–≤–∞—Ä {nm_id}?", 
                    reply_markup=get_yes_no_keyboard("order", "–∑–∞–∫–∞–∑–∞–ª(–∞)")
                )
                await state.set_state(UserFlow.waiting_for_order)
                return
            else:
                try:
                    # –ù–µ –ø–æ–¥–ø–∏—Å–∞–Ω
                    await callback.message.edit_text(
                        "‚ùå –ü–æ–∫–∞ –≤—ã –Ω–µ –ø–æ–¥–ø–∏—à–µ—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª ‚Äî —Ä–∞–∑–¥–∞—á–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞.\n"
                        f"–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ {CHANNEL_USERNAME} –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:",
                        reply_markup=get_yes_no_keyboard("subscribe", "–ø–æ–¥–ø–∏—Å–∞–ª—Å—è(–ª–∞—Å—å)")
                    )
                except:
                    await callback.message.edit_text(
                        f"–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ {CHANNEL_USERNAME} –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:",
                        reply_markup=get_yes_no_keyboard("subscribe", "–ø–æ–¥–ø–∏—Å–∞–ª—Å—è(–ª–∞—Å—å)")
                    )
        except TelegramBadRequest:
            await callback.message.answer(
                "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –±–æ—Ç ‚Äî –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∫–∞–Ω–∞–ª–∞."
            )
    else:
        # –ù–µ –ø–æ–¥–ø–∏—Å–∞–Ω
        try:
            await callback.message.edit_text(
                "‚ùå –ü–æ–∫–∞ –≤—ã –Ω–µ –ø–æ–¥–ø–∏—à–µ—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª ‚Äî —Ä–∞–∑–¥–∞—á–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞.\n"
                f"–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ {CHANNEL_USERNAME} –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:",
                reply_markup=get_yes_no_keyboard("subscribe", "–ø–æ–¥–ø–∏—Å–∞–ª—Å—è(–ª–∞—Å—å)")
            )
        except:
            await callback.message.edit_text(
                f"–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ {CHANNEL_USERNAME} –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:",
                reply_markup=get_yes_no_keyboard("subscribe", "–ø–æ–¥–ø–∏—Å–∞–ª—Å—è(–ª–∞—Å—å)")
            )
        await state.set_state(UserFlow.waiting_for_subcription_to_channel)