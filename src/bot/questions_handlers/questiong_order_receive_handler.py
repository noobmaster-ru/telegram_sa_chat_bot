from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext

from src.bot.states.user_flow import UserFlow
from src.bot.keyboards.get_yes_no_keyboard import get_yes_no_keyboard
from src.bot.questions_handlers.question_feedback_done_handler import ask_is_feedback_done_question

from src.google_sheets.google_sheets_class import GoogleSheetClass

router = Router()


async def ask_is_product_receive_question(
    message: Message, 
    state: FSMContext
):
    await message.answer(
        "üì¨ –í—ã –ø–æ–ª—É—á–∏–ª–∏ —Ç–æ–≤–∞—Ä?", 
        reply_markup=get_yes_no_keyboard("receive", "–ø–æ–ª—É—á–∏–ª(–∞)")
    )
    # –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∫–Ω–æ–ø–∫—É –ø–æ—Å–ª–µ "üì¶ –í—ã –∑–∞–∫–∞–∑–∞–ª–∏ —Ç–æ–≤–∞—Ä?"
    await state.set_state(UserFlow.waiting_for_order_receive)

# –Æ–∑–µ—Ä –ø–æ—Å–ª–µ "üì¨ –í—ã –ø–æ–ª—É—á–∏–ª–∏ —Ç–æ–≤–∞—Ä?" –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É –∫–∞–∫—É—é-—Ç–æ
@router.callback_query(F.data.startswith("receive_"))
async def handle_question_answer(
    callback: CallbackQuery, 
    spreadsheet: GoogleSheetClass, 
    BUYERS_SHEET_NAME: str,
    state: FSMContext
):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫ –î–∞/–ù–µ—Ç"""
    telegram_id = callback.from_user.id
    data = callback.data

    key = data.split("_")[0]
    value = "–î–∞" if data.endswith("_yes") else "–ù–µ—Ç"


    # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç –≤ –≥—É–≥–ª-—Ç–∞–±–ª–∏—Ü—É
    await spreadsheet.update_buyer_button_status(
        sheet_name=BUYERS_SHEET_NAME,
        telegram_id=telegram_id,
        button_name=key,
        value=value
    )

    # –µ—Å–ª–∏ –æ—Ç–≤–µ—Ç "–ù–µ—Ç" ‚Üí –∑–∞–¥–∞—ë–º —Ç–æ—Ç –∂–µ –≤–æ–ø—Ä–æ—Å –µ—â—ë —Ä–∞–∑
    if value == "–ù–µ—Ç":
        await callback.message.answer(
            "üì¨ –í—ã –ø–æ–ª—É—á–∏–ª–∏ —Ç–æ–≤–∞—Ä?", 
            reply_markup=get_yes_no_keyboard("receive", "–ø–æ–ª—É—á–∏–ª(–∞)")
        )
        await state.set_state(UserFlow.waiting_for_order_receive)
        await callback.answer()
        return

    # –µ—Å–ª–∏ –æ—Ç–≤–µ—Ç "–î–∞" ‚Üí –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É
    await ask_is_feedback_done_question(callback.message, state)
    await callback.answer()