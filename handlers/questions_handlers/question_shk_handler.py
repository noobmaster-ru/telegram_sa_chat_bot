from aiogram.fsm.context import FSMContext

from aiogram.types import Message, CallbackQuery
from aiogram import Router, F

from google_sheets.google_sheets_class import GoogleSheetClass


from handlers.keyboards.get_yes_no_keyboard import get_yes_no_keyboard

from handlers.states.user_flow import UserFlow

router = Router()


async def ask_is_shk_cut_question(
    message: Message, 
    state: FSMContext
):
    await message.answer(
        "‚úÇÔ∏è –®–ö —Ä–∞–∑—Ä–µ–∑–∞–ª–∏?", 
        reply_markup=get_yes_no_keyboard("shk")
    )
    # –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∫–Ω–æ–ø–∫—É –ø–æ—Å–ª–µ "üì¶ –í—ã –∑–∞–∫–∞–∑–∞–ª–∏ —Ç–æ–≤–∞—Ä?"
    await state.set_state(UserFlow.waiting_for_shk)

# –Æ–∑–µ—Ä –ø–æ—Å–ª–µ "‚úÇÔ∏è –®–ö —Ä–∞–∑—Ä–µ–∑–∞–ª–∏?" –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É –∫–∞–∫—É—é-—Ç–æ
@router.callback_query(F.data.startswith("shk_"))
async def handle_question_answer(
    callback: CallbackQuery, 
    spreadsheet: GoogleSheetClass, 
    BUYERS_SHEET_NAME: str,
    state: FSMContext
):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫ –î–∞/–ù–µ—Ç"""
    username = callback.from_user.username or "–±–µ–∑ username"
    telegram_id = callback.from_user.id
    data = callback.data

    key = data.split("_")[0]
    value = "–î–∞" if data.endswith("_yes") else "–ù–µ—Ç"

    # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç –≤ –≥—É–≥–ª-—Ç–∞–±–ª–∏—Ü—É
    spreadsheet.update_buyer_button_status(
        sheet_name=BUYERS_SHEET_NAME,
        telegram_id=telegram_id,
        button_name=key,
        value=value
    )

    # –µ—Å–ª–∏ –æ—Ç–≤–µ—Ç "–ù–µ—Ç" ‚Üí –∑–∞–¥–∞—ë–º —Ç–æ—Ç –∂–µ –≤–æ–ø—Ä–æ—Å –µ—â—ë —Ä–∞–∑
    if value == "–ù–µ—Ç":
        await callback.message.answer(
            "‚úÇÔ∏è –®–ö —Ä–∞–∑—Ä–µ–∑–∞–ª–∏?", 
            reply_markup=get_yes_no_keyboard("shk")
        )
        await state.set_state(UserFlow.waiting_for_shk)
        await callback.answer()
        return

    # –µ—Å–ª–∏ –æ—Ç–≤–µ—Ç "–î–∞" ‚Üí –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É
    await callback.message.answer("‚úÖ –í—Å–µ –æ—Ç–≤–µ—Ç—ã –ø–æ–ª—É—á–µ–Ω—ã, —Å–ø–∞—Å–∏–±–æ!")
    await callback.message.answer("‚ò∫Ô∏è –ú–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–≤–æ–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã: –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã/–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ —Å—É–º–º—É –¥–ª—è –æ–ø–ª–∞—Ç—ã. –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è.")
    await state.clear() # –æ—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    return